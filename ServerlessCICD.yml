Parameters:
  ProjectName:
    Type: String
    Default: test-cicd-proj
  Repo:
    Type: String
  Branch:
    Type: String
    Default: main
  ConnectionArn:
    Type: String

Resources:
  BuildExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
      Path: /
      Policies:
        - PolicyName: build-execution
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - "ssm:*"
                - "lambda:*"
                - "apigateway:*"
                - "cloudformation:*"
                - "codebuild:*"
                - "iam:*"
                - "s3:*"
                - "certificatemanager:*"
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
                Effect: Allow
                Resource: '*'
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'codebuild:*'
                - 'codecommit:*'
                - 'codestar-connections:UseConnection'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Cache:
        Modes:
          - LOCAL_SOURCE_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
        Type: LOCAL
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:4.0
        ComputeType: BUILD_GENERAL1_SMALL
      Name: !Ref ProjectName
      ServiceRole: !GetAtt BuildExecutionRole.Arn
      Source:
        Type: CODEPIPELINE
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      Name: !Ref ProjectName
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions: 
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref Repo
                BranchName: !Ref Branch
                DetectChanges: true
                OutputArtifactFormat: "CODE_ZIP"
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildProject
              InputArtifacts:
                - Name: BuildArtifact